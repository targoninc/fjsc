{
  "version": 3,
  "sources": ["..\\src\\store.ts", "..\\src\\signals.ts", "..\\src\\f2.ts", "..\\src\\fjscVariables.ts", "..\\src\\fjscCssClasses.ts"],
  "sourcesContent": [
    "export class FjsStore {\r\n    static keyName = \"__fjs_store__\";\r\n\r\n    static get(key: string) {\r\n        // @ts-ignore\r\n        return window[this.keyName][key];\r\n    }\r\n\r\n    static set(key: any, value: any) {\r\n        // @ts-ignore\r\n        window[this.keyName][key] = value;\r\n    }\r\n\r\n    static clear() {\r\n        // @ts-ignore\r\n        window[this.keyName] = {};\r\n    }\r\n\r\n    static remove(key: any) {\r\n        // @ts-ignore\r\n        delete window[this.keyName][key];\r\n    }\r\n\r\n    static getAll() {\r\n        // @ts-ignore\r\n        return window[this.keyName];\r\n    }\r\n\r\n    static keys() {\r\n        // @ts-ignore\r\n        return Object.keys(window[this.keyName]);\r\n    }\r\n\r\n    static values() {\r\n        // @ts-ignore\r\n        return Object.values(window[this.keyName]);\r\n    }\r\n\r\n    static getSignalValue(key: any) {\r\n        return this.get(key).value;\r\n    }\r\n\r\n    static setSignalValue(key: any, value: any) {\r\n        this.get(key).value = value;\r\n    }\r\n}\r\n\r\n/**\r\n * If called with one argument, gets the value for that key, otherwise saves it to the store.\r\n * @param key\r\n * @param value\r\n * @returns {*|void}\r\n */\r\nexport function store(key = null, value = null): any | void {\r\n    if (!window) {\r\n        console.warn(\"store() is not supported outside of the browser!\");\r\n        return;\r\n    }\r\n    // @ts-ignore\r\n    if (!window[FjsStore.keyName]) {\r\n        // @ts-ignore\r\n        window[FjsStore.keyName] = {};\r\n    }\r\n    if (arguments.length === 1) {\r\n        return FjsStore.get(arguments[0]);\r\n    } else if (arguments.length === 2) {\r\n        return FjsStore.set(arguments[0], arguments[1]);\r\n    }\r\n\r\n    throw new Error(\"Passing more than 2 arguments to store() is not supported.\");\r\n}",
    "import {store} from \"./store.ts\";\r\n\r\nexport interface BoolValueAssignments<T> {\r\n    [key: string]: {\r\n        onTrue: T,\r\n        onFalse: T,\r\n    }\r\n}\r\n\r\nexport type SignalCallback<T> = (newValue: T, changed: boolean) => void;\r\n\r\nexport class Signal<T> {\r\n    _callbacks: SignalCallback<T>[] = [];\r\n    _value: T;\r\n    _values: { [key: string]: Signal<T> } = {};\r\n\r\n    constructor(initialValue: T, updateCallback: SignalCallback<T> = () => {\r\n    }, key = null) {\r\n        this._value = initialValue;\r\n        this._values = {};\r\n        this._callbacks.push(updateCallback);\r\n        if (key) {\r\n            store().set(key, this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates an object with boolean signals that update when {this} updates.\r\n     * @param assignments {Object} e.g. { someKey: { onTrue: value1, onFalse: value2 } }\r\n     */\r\n    boolValues(assignments: BoolValueAssignments<T> = {}) {\r\n        for (let key in assignments) {\r\n            this._values[key] = signal<T>(this._value ? assignments[key].onTrue : assignments[key].onFalse);\r\n        }\r\n        this.subscribe((newValue: T) => {\r\n            for (let key in assignments) {\r\n                this._values[key].value = newValue ? assignments[key].onTrue : assignments[key].onFalse;\r\n            }\r\n        });\r\n        return this._values;\r\n    }\r\n\r\n    unsubscribeAll() {\r\n        this._callbacks = [];\r\n    }\r\n\r\n    subscribe(callback: SignalCallback<T>) {\r\n        this._callbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback: SignalCallback<T>) {\r\n        const index = this._callbacks.indexOf(callback);\r\n        if (index >= 0) {\r\n            this._callbacks.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    get onUpdate(): SignalCallback<T>[] {\r\n        return this._callbacks;\r\n    }\r\n\r\n    set onUpdate(callback: SignalCallback<T>) {\r\n        this._callbacks.push(callback);\r\n    }\r\n\r\n    get value(): T {\r\n        return this._value;\r\n    }\r\n\r\n    set value(value: T) {\r\n        const changed = this._value !== value;\r\n        this._value = value;\r\n        this._callbacks.forEach(callback => callback(value, changed));\r\n    }\r\n}\r\n\r\nexport function signal<T>(initialValue: T) {\r\n    return new Signal<T>(initialValue);\r\n}\r\n\r\nexport function compute<T, Args extends any[]>(\r\n    valueFunction: (...args: Args) => T,\r\n    ...signals: {[K in keyof Args]: Signal<Args[K]>}\r\n): Signal<T> {\r\n    const getValues = () => signals.map(s => s.value) as Args;\r\n    let out = signal<T>(valueFunction(...getValues()));\r\n\r\n    for (const sig of signals) {\r\n        sig.subscribe((_, changed) => {\r\n            if (!changed) {\r\n                return;\r\n            }\r\n            out.value = valueFunction(...getValues());\r\n        });\r\n    }\r\n    return out;\r\n}\r\n\r\nexport async function asyncCompute<T, Args extends any[]>(\r\n    valueFunction: (...args: Args) => Promise<T>,\r\n    ...signals: { [K in keyof Args]: Signal<Args[K]> }\r\n): Promise<Signal<T>> {\r\n    const getValues = () => signals.map(s => s.value) as Args;\r\n    let out = signal<T>(await valueFunction(...getValues()));\r\n\r\n    for (const sig of signals) {\r\n        sig.subscribe(async (_, changed) => {\r\n            if (!changed) {\r\n                return;\r\n            }\r\n            out.value = await valueFunction(...getValues());\r\n        });\r\n    }\r\n    return out;\r\n}\r\n\r\n/**\r\n * Short wrapper to make dependent signals easier.\r\n * @deprecated Use compute() instead\r\n * @param sourceSignal {Signal} Whenever the source signal is updated, the updateMethod gets called to update the output signal.\r\n * @param updateMethod {Function} Should return the value to update the output signal with.\r\n */\r\nexport function computedSignal<T>(sourceSignal: Signal<any>, updateMethod: Function): Signal<T> {\r\n    const returnSignal = signal<T>(updateMethod(sourceSignal.value));\r\n    sourceSignal.subscribe((newVal: (T)) => {\r\n        try {\r\n            returnSignal.value = updateMethod(newVal);\r\n        } catch (e) {\r\n            // @ts-ignore\r\n            returnSignal.value = null;\r\n        }\r\n    });\r\n    return returnSignal;\r\n}\r\n\r\n/**\r\n * @deprecated Use compute() instead\r\n * @param sourceSignal\r\n * @param propertyName\r\n */\r\nexport function signalFromProperty(sourceSignal: Signal<any>, propertyName: string) {\r\n    return compute((source: any) => {\r\n        if (!source) {\r\n            return null;\r\n        }\r\n        return source[propertyName];\r\n    }, sourceSignal);\r\n}",
    "import {InputType} from \"./Types.ts\";\r\nimport {signal, Signal} from \"./signals.ts\";\r\n\r\nexport type TypeOrSignal<T> = T | Signal<T>;\r\nexport type StringOrSignal = TypeOrSignal<string>;\r\nexport type HtmlPropertyValue = StringOrSignal | TypeOrSignal<number | boolean | null | undefined>;\r\nexport type EventHandler<T> = ((this: GlobalEventHandlers, ev: T) => any) | Function;\r\nexport type AnyElement = HTMLElement | SVGElement;\r\nexport type AnyNode = DomNode | AnyElement;\r\nexport type AnyElementFactory = () => AnyElement;\r\n\r\ntype propertyOmissions = Omit<CSSStyleDeclaration, \"cssText\" | \"cssFloat\">;\r\ntype StringKeys<T> = {\r\n    [K in keyof T]: T[K] extends string ? K : never;\r\n}[keyof T];\r\ntype stringProperties = StringKeys<propertyOmissions>;\r\nexport type SettableCss = {\r\n    [K in stringProperties]: StringOrSignal\r\n};\r\nexport type CssClass = Partial<SettableCss>;\r\n\r\nexport function mergeCss(...cssObjs: (CssClass|undefined)[]): CssClass {\r\n    return Object.assign({}, ...cssObjs.filter(o => o));\r\n}\r\n\r\nexport function create(tag: string) {\r\n    return new DomNode(tag);\r\n}\r\n\r\nexport function nullElement() {\r\n    return create(\"div\").styles(\"display\", \"none\").build();\r\n}\r\n\r\nexport function ifjs(condition: any, element: AnyElement | AnyElementFactory, inverted = false) {\r\n    function getElement(): AnyElement {\r\n        if (element.constructor === Function) {\r\n            return (<AnyElementFactory>element)();\r\n        }\r\n        return <AnyElement>element;\r\n    }\r\n\r\n    if (condition && condition.constructor === Signal) {\r\n        const state = signal(condition.value ? (inverted ? nullElement() : getElement()) : (inverted ? getElement() : nullElement()));\r\n        condition.subscribe((newValue: any) => {\r\n            if (newValue) {\r\n                state.value = inverted ? nullElement() : getElement();\r\n            } else {\r\n                state.value = inverted ? getElement() : nullElement();\r\n            }\r\n        });\r\n        return state;\r\n    } else {\r\n        return condition ? (inverted ? nullElement() : getElement()) : (inverted ? getElement() : nullElement());\r\n    }\r\n}\r\n\r\nexport function signalMap<T>(arrayState: Signal<T[]>, wrapper: DomNode, callback: Function, renderSequentially = false): any {\r\n    if (!arrayState.subscribe) {\r\n        throw new Error(\"arrayState argument for signalMap is not subscribable\");\r\n    }\r\n\r\n    const update = (newValue: Iterable<T>) => {\r\n        if (!newValue) {\r\n            return;\r\n        }\r\n        const tmp = [...newValue];\r\n        const children = [];\r\n        if (renderSequentially) {\r\n            wrapper.overwriteChildren();\r\n            for (let i = 0; i < tmp.length; i++) {\r\n                wrapper.children(callback(tmp[i], i));\r\n            }\r\n        } else {\r\n            for (let i = 0; i < tmp.length; i++) {\r\n                children.push(callback(tmp[i], i));\r\n            }\r\n            // @ts-ignore\r\n            wrapper.overwriteChildren(...children);\r\n        }\r\n    };\r\n    arrayState.subscribe(update);\r\n    update(arrayState.value);\r\n\r\n    return wrapper.build();\r\n}\r\n\r\nexport function stack(message: string, debugInfo = {}) {\r\n    console.warn(message, { debugInfo }, (new Error()).stack);\r\n}\r\n\r\nexport function isValidElement(element: any) {\r\n    const validTypes = [HTMLElement, SVGElement];\r\n    return validTypes.some(type => element instanceof type);\r\n}\r\n\r\ntype AnyElementWithKeyIndex = AnyElement & {\r\n    [key: string]: HtmlPropertyValue\r\n};\r\n\r\nexport class DomNode {\r\n    _node: AnyElementWithKeyIndex;\r\n    svgTags = ['svg', 'g', 'circle', 'ellipse', 'line', 'path', 'polygon', 'polyline', 'rect', 'text', 'textPath', 'tspan'];\r\n\r\n    constructor(tag: string) {\r\n        if (this.svgTags.includes(tag)) {\r\n            this._node = document.createElementNS(\"http://www.w3.org/2000/svg\", tag) as AnyElementWithKeyIndex;\r\n        } else {\r\n            this._node = document.createElement(tag) as AnyElementWithKeyIndex;\r\n        }\r\n    }\r\n\r\n    applyGenericConfig(config: any) {\r\n        return this.classes(\"fjsc\", ...(config.classes ?? []))\r\n            .attributes(...(config.attributes ?? []))\r\n            .styles(...(config.styles ?? []))\r\n            .id(config.id)\r\n            .css(config.css)\r\n            .title(config.title)\r\n            .role(config.role);\r\n    }\r\n\r\n    build(): AnyElement {\r\n        if (!isValidElement(this._node)) {\r\n            throw new Error('Invalid node type. Must be an HTMLElement or a subclass.');\r\n        }\r\n        return this._node;\r\n    }\r\n\r\n    wrapProperty(property: string, value: HtmlPropertyValue) {\r\n        if (value && value.constructor === Signal) {\r\n            const sig = value as Signal<string>;\r\n            this._node[property] = sig.value;\r\n            sig.subscribe((newValue: HtmlPropertyValue) => {\r\n                this._node[property] = newValue;\r\n            });\r\n        } else {\r\n            if (value !== undefined && value !== null) {\r\n                this._node[property] = value;\r\n            }\r\n        }\r\n    }\r\n\r\n    class(className: string) {\r\n        return this.classes(className);\r\n    }\r\n\r\n    classes(...classes: StringOrSignal[]) {\r\n        for (let cls of classes) {\r\n            if (cls && cls.constructor === Signal) {\r\n                const sig = cls as Signal<string>;\r\n                let previousValue = sig.value as string;\r\n                this._node.classList.add(previousValue);\r\n                sig.subscribe((newValue: string) => {\r\n                    this._node.classList.remove(previousValue);\r\n                    this._node.classList.add(newValue);\r\n                    previousValue = newValue;\r\n                });\r\n            } else {\r\n                this._node.classList.add(cls as string);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    attribute(key: string, value: HtmlPropertyValue) {\r\n        return this.attributes(key, value);\r\n    }\r\n\r\n    attributes(...attributes: HtmlPropertyValue[]) {\r\n        if (arguments.length % 2 === 0) {\r\n            for (let i = 0; i < arguments.length; i += 2) {\r\n                const key = arguments[i];\r\n                const value = arguments[i + 1];\r\n                if (value && value.constructor === Signal) {\r\n                    this._node.setAttribute(key, value.value);\r\n                    value.onUpdate = (newValue: string) => {\r\n                        this._node.setAttribute(key, newValue);\r\n                    };\r\n                } else {\r\n                    this._node.setAttribute(key, value);\r\n                }\r\n            }\r\n        } else {\r\n            throw new Error('Invalid number of arguments for attributes. Must be even. (key, value, key, value, ...)');\r\n        }\r\n        return this;\r\n    }\r\n\r\n    id(id: HtmlPropertyValue) {\r\n        this.wrapProperty('id', id);\r\n        return this;\r\n    }\r\n\r\n    text(text: HtmlPropertyValue) {\r\n        this.wrapProperty('innerText', text);\r\n        return this;\r\n    }\r\n\r\n    title(title: HtmlPropertyValue) {\r\n        this.wrapProperty('title', title);\r\n        return this;\r\n    }\r\n\r\n    html(html: HtmlPropertyValue) {\r\n        this.wrapProperty('innerHTML', html);\r\n        return this;\r\n    }\r\n\r\n    children(...children: (TypeOrSignal<DomNode>|TypeOrSignal<AnyElement>|TypeOrSignal<AnyNode>|null)[]) {\r\n        for (let node of arguments) {\r\n            if (isValidElement(node)) {\r\n                this._node.appendChild(node);\r\n            } else if (node instanceof DomNode) {\r\n                this._node.appendChild(node.build());\r\n            } else if (node && node.constructor === Signal) {\r\n                let childNode = node.value;\r\n                if (!isValidElement(childNode)) {\r\n                    // Create a placeholder div if the value is not an HTMLElement so we can swap it out later\r\n                    childNode = nullElement();\r\n                }\r\n                this._node.appendChild(childNode);\r\n                node.onUpdate = (newValue: AnyNode) => {\r\n                    if (isValidElement(newValue)) {\r\n                        this._node.replaceChild(newValue as AnyElement, childNode);\r\n                        childNode = newValue;\r\n                    } else if (newValue.constructor === DomNode) {\r\n                        this._node.replaceChild(newValue.build(), childNode);\r\n                        childNode = newValue.build();\r\n                    } else {\r\n                        stack('Unexpected value for child. Must be an HTMLElement or a subclass.', newValue);\r\n                    }\r\n                };\r\n            } else if (node && node.constructor === Array) {\r\n                for (let childNode of node) {\r\n                    this.children(childNode);\r\n                }\r\n            } else {\r\n                if (node) {\r\n                    stack('Invalid node type. Must be an HTMLElement or a subclass.', node);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    overwriteChildren() {\r\n        this._node.innerHTML = '';\r\n        return this.children(...arguments);\r\n    }\r\n\r\n    child() {\r\n        return this.children(...arguments);\r\n    }\r\n\r\n    role(role: HtmlPropertyValue) {\r\n        this.wrapProperty('role', role);\r\n        return this;\r\n    }\r\n\r\n    prefixedAttribute(prefix: string, key: string, value: HtmlPropertyValue) {\r\n        return this.attributes(`${prefix}-${key}`, value);\r\n    }\r\n\r\n    aria(key: string, value: HtmlPropertyValue) {\r\n        return this.prefixedAttribute('aria', key, value);\r\n    }\r\n\r\n    data(key: string, value: HtmlPropertyValue) {\r\n        return this.prefixedAttribute('data', key, value);\r\n    }\r\n\r\n    onclick(callback: EventHandler<MouseEvent>) {\r\n        // @ts-ignore\r\n        this._node.onclick = callback;\r\n        return this;\r\n    }\r\n\r\n    onauxclick(callback: EventHandler<MouseEvent>) {\r\n        // @ts-ignore\r\n        this._node.onauxclick = callback;\r\n        return this;\r\n    }\r\n\r\n    ondblclick(callback: EventHandler<MouseEvent>) {\r\n        // @ts-ignore\r\n        this._node.ondblclick = callback;\r\n        return this;\r\n    }\r\n\r\n    onchange(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.onchange = callback;\r\n        return this;\r\n    }\r\n\r\n    oninput(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.oninput = callback;\r\n        return this;\r\n    }\r\n\r\n    onkeydown(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.onkeydown = callback;\r\n        return this;\r\n    }\r\n\r\n    onkeyup(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.onkeyup = callback;\r\n        return this;\r\n    }\r\n\r\n    onmousedown(callback: EventHandler<MouseEvent>) {\r\n        // @ts-ignore\r\n        this._node.onmousedown = callback;\r\n        return this;\r\n    }\r\n\r\n    onmouseup(callback: EventHandler<MouseEvent>) {\r\n        // @ts-ignore\r\n        this._node.onmouseup = callback;\r\n        return this;\r\n    }\r\n\r\n    onmouseover(callback: EventHandler<MouseEvent>) {\r\n        // @ts-ignore\r\n        this._node.onmouseover = callback;\r\n        return this;\r\n    }\r\n\r\n    onmouseout(callback: EventHandler<MouseEvent>) {\r\n        // @ts-ignore\r\n        this._node.onmouseout = callback;\r\n        return this;\r\n    }\r\n\r\n    onmousemove(callback: EventHandler<MouseEvent>) {\r\n        // @ts-ignore\r\n        this._node.onmousemove = callback;\r\n        return this;\r\n    }\r\n\r\n    onmouseenter(callback: EventHandler<MouseEvent>) {\r\n        // @ts-ignore\r\n        this._node.onmouseenter = callback;\r\n        return this;\r\n    }\r\n\r\n    onmouseleave(callback: EventHandler<MouseEvent>) {\r\n        // @ts-ignore\r\n        this._node.onmouseleave = callback;\r\n        return this;\r\n    }\r\n\r\n    oncontextmenu(callback: EventHandler<MouseEvent>) {\r\n        // @ts-ignore\r\n        this._node.oncontextmenu = callback;\r\n        return this;\r\n    }\r\n\r\n    onwheel(callback: EventHandler<MouseEvent>) {\r\n        // @ts-ignore\r\n        this._node.onwheel = callback;\r\n        return this;\r\n    }\r\n\r\n    ondrag(callback: EventHandler<MouseEvent>) {\r\n        // @ts-ignore\r\n        this._node.ondrag = callback;\r\n        return this;\r\n    }\r\n\r\n    ondragend(callback: EventHandler<MouseEvent>) {\r\n        // @ts-ignore\r\n        this._node.ondragend = callback;\r\n        return this;\r\n    }\r\n\r\n    ondragenter(callback: EventHandler<MouseEvent>) {\r\n        // @ts-ignore\r\n        this._node.ondragenter = callback;\r\n        return this;\r\n    }\r\n\r\n    ondragstart(callback: EventHandler<MouseEvent>) {\r\n        // @ts-ignore\r\n        this._node.ondragstart = callback;\r\n        return this;\r\n    }\r\n\r\n    ondragleave(callback: EventHandler<MouseEvent>) {\r\n        // @ts-ignore\r\n        this._node.ondragleave = callback;\r\n        return this;\r\n    }\r\n\r\n    ondragover(callback: EventHandler<MouseEvent>) {\r\n        // @ts-ignore\r\n        this._node.ondragover = callback;\r\n        return this;\r\n    }\r\n\r\n    ondrop(callback: EventHandler<MouseEvent>) {\r\n        // @ts-ignore\r\n        this._node.ondrop = callback;\r\n        return this;\r\n    }\r\n\r\n    onscroll(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.onscroll = callback;\r\n        return this;\r\n    }\r\n\r\n    onfocus(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.onfocus = callback;\r\n        return this;\r\n    }\r\n\r\n    onblur(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.onblur = callback;\r\n        return this;\r\n    }\r\n\r\n    onresize(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.onresize = callback;\r\n        return this;\r\n    }\r\n\r\n    onselect(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.onselect = callback;\r\n        return this;\r\n    }\r\n\r\n    onsubmit(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.onsubmit = callback;\r\n        return this;\r\n    }\r\n\r\n    onreset(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.onreset = callback;\r\n        return this;\r\n    }\r\n\r\n    onabort(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.onabort = callback;\r\n        return this;\r\n    }\r\n\r\n    onerror(callback: EventHandler<string|Event>) {\r\n        // @ts-ignore\r\n        this._node.onerror = callback;\r\n        return this;\r\n    }\r\n\r\n    oncanplay(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.oncanplay = callback;\r\n        return this;\r\n    }\r\n\r\n    oncanplaythrough(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.oncanplaythrough = callback;\r\n        return this;\r\n    }\r\n\r\n    ondurationchange(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.ondurationchange = callback;\r\n        return this;\r\n    }\r\n\r\n    onemptied(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.onemptied = callback;\r\n        return this;\r\n    }\r\n\r\n    onended(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.onended = callback;\r\n        return this;\r\n    }\r\n\r\n    onloadeddata(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.onloadeddata = callback;\r\n        return this;\r\n    }\r\n\r\n    onloadedmetadata(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.onloadedmetadata = callback;\r\n        return this;\r\n    }\r\n\r\n    onloadstart(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.onloadstart = callback;\r\n        return this;\r\n    }\r\n\r\n    onpause(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.onpause = callback;\r\n        return this;\r\n    }\r\n\r\n    onplay(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.onplay = callback;\r\n        return this;\r\n    }\r\n\r\n    onplaying(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.onplaying = callback;\r\n        return this;\r\n    }\r\n\r\n    onprogress(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.onprogress = callback;\r\n        return this;\r\n    }\r\n\r\n    onratechange(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.onratechange = callback;\r\n        return this;\r\n    }\r\n\r\n    onseeked(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.onseeked = callback;\r\n        return this;\r\n    }\r\n\r\n    onseeking(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.onseeking = callback;\r\n        return this;\r\n    }\r\n\r\n    onstalled(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.onstalled = callback;\r\n        return this;\r\n    }\r\n\r\n    onsuspend(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.onsuspend = callback;\r\n        return this;\r\n    }\r\n\r\n    ontimeupdate(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.ontimeupdate = callback;\r\n        return this;\r\n    }\r\n\r\n    onvolumechange(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.onvolumechange = callback;\r\n        return this;\r\n    }\r\n\r\n    onwaiting(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.onwaiting = callback;\r\n        return this;\r\n    }\r\n\r\n    oncopy(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.oncopy = callback;\r\n        return this;\r\n    }\r\n\r\n    oncut(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.oncut = callback;\r\n        return this;\r\n    }\r\n\r\n    onpaste(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.onpaste = callback;\r\n        return this;\r\n    }\r\n\r\n    onanimationstart(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.onanimationstart = callback;\r\n        return this;\r\n    }\r\n\r\n    onanimationend(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.onanimationend = callback;\r\n        return this;\r\n    }\r\n\r\n    onanimationiteration(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.onanimationiteration = callback;\r\n        return this;\r\n    }\r\n\r\n    ontransitionend(callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.ontransitionend = callback;\r\n        return this;\r\n    }\r\n\r\n    on(eventName: string, callback: EventHandler<Event>) {\r\n        // @ts-ignore\r\n        this._node.addEventListener(eventName, callback);\r\n        return this;\r\n    }\r\n\r\n    open(open: HtmlPropertyValue) {\r\n        this.wrapProperty('open', open);\r\n        return this;\r\n    }\r\n\r\n    src(src: HtmlPropertyValue) {\r\n        this.wrapProperty('src', src);\r\n        return this;\r\n    }\r\n\r\n    alt(alt: HtmlPropertyValue) {\r\n        this.wrapProperty('alt', alt);\r\n        return this;\r\n    }\r\n\r\n    css(css: CssClass) {\r\n        if (!css) {\r\n            return this;\r\n        }\r\n        for (const [key, value] of Object.entries(css as Record<string, StringOrSignal>)) {\r\n            this.styles(key, value);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    style(key: string, value: StringOrSignal) {\r\n        return this.styles(key, value);\r\n    }\r\n\r\n    styles(...styles: StringOrSignal[]) {\r\n        if (arguments.length % 2 === 0) {\r\n            for (let i = 0; i < arguments.length; i += 2) {\r\n                const key = arguments[i];\r\n                const value = arguments[i + 1];\r\n                if (key.constructor !== String) {\r\n                    throw new Error('Invalid key type for styles. Must be a string.');\r\n                }\r\n                if (value && value.constructor === Signal) {\r\n                    // @ts-ignore\r\n                    this._node.style[key] = value.value;\r\n                    value.onUpdate = (newValue: any) => {\r\n                        // @ts-ignore\r\n                        this._node.style[key] = newValue;\r\n                    };\r\n                } else {\r\n                    // @ts-ignore\r\n                    this._node.style[key] = value;\r\n                }\r\n            }\r\n        } else {\r\n            throw new Error('Invalid number of arguments for styles. Must be even. (key, value, key, value, ...)');\r\n        }\r\n        return this;\r\n    }\r\n\r\n    width(width: HtmlPropertyValue) {\r\n        this.wrapProperty('width', width);\r\n        return this;\r\n    }\r\n\r\n    height(height: HtmlPropertyValue) {\r\n        this.wrapProperty('height', height);\r\n        return this;\r\n    }\r\n\r\n    type(type: TypeOrSignal<InputType>) {\r\n        // @ts-ignore\r\n        this.wrapProperty('type', type);\r\n        return this;\r\n    }\r\n\r\n    name(name: HtmlPropertyValue) {\r\n        this.wrapProperty('name', name);\r\n        return this;\r\n    }\r\n\r\n    value(value: HtmlPropertyValue) {\r\n        this.wrapProperty('value', value);\r\n        return this;\r\n    }\r\n\r\n    placeholder(placeholder: HtmlPropertyValue) {\r\n        this.wrapProperty('placeholder', placeholder);\r\n        return this;\r\n    }\r\n\r\n    for(forId: HtmlPropertyValue) {\r\n        this.wrapProperty('for', forId);\r\n        return this;\r\n    }\r\n\r\n    checked(checked: HtmlPropertyValue) {\r\n        this.wrapProperty('checked', checked);\r\n        return this;\r\n    }\r\n\r\n    disabled(disabled: HtmlPropertyValue) {\r\n        this.wrapProperty('disabled', disabled);\r\n        return this;\r\n    }\r\n\r\n    selected(selected: HtmlPropertyValue) {\r\n        this.wrapProperty('selected', selected);\r\n        return this;\r\n    }\r\n\r\n    href(href: HtmlPropertyValue) {\r\n        this.wrapProperty('href', href);\r\n        return this;\r\n    }\r\n\r\n    target(target: HtmlPropertyValue) {\r\n        this.wrapProperty('target', target);\r\n        return this;\r\n    }\r\n\r\n    rel(rel: HtmlPropertyValue) {\r\n        this.wrapProperty('rel', rel);\r\n        return this;\r\n    }\r\n\r\n    required(required: HtmlPropertyValue) {\r\n        this.wrapProperty('required', required);\r\n        return this;\r\n    }\r\n\r\n    multiple(multiple: HtmlPropertyValue) {\r\n        this.wrapProperty('multiple', multiple);\r\n        return this;\r\n    }\r\n\r\n    accept(accept: HtmlPropertyValue) {\r\n        this.wrapProperty('accept', accept);\r\n        return this;\r\n    }\r\n\r\n    acceptCharset(acceptCharset: HtmlPropertyValue) {\r\n        this.wrapProperty('acceptCharset', acceptCharset);\r\n        return this;\r\n    }\r\n\r\n    action(action: HtmlPropertyValue) {\r\n        this.wrapProperty('action', action);\r\n        return this;\r\n    }\r\n\r\n    autocomplete(autocomplete: HtmlPropertyValue) {\r\n        this.wrapProperty('autocomplete', autocomplete);\r\n        return this;\r\n    }\r\n\r\n    enctype(enctype: HtmlPropertyValue) {\r\n        this.wrapProperty('enctype', enctype);\r\n        return this;\r\n    }\r\n\r\n    method(method: HtmlPropertyValue) {\r\n        this.wrapProperty('method', method);\r\n        return this;\r\n    }\r\n\r\n    novalidate(novalidate: HtmlPropertyValue) {\r\n        this.wrapProperty('novalidate', novalidate);\r\n        return this;\r\n    }\r\n}",
    "export const fjscPrimary100 = \"#f5f5f5\";\r\nexport const fjscPrimary200 = \"#e0e0e0\";\r\nexport const fjscPrimary300 = \"#c6c6c6\";\r\nexport const fjscPrimary400 = \"#a8a8a8\";\r\nexport const fjscPrimary500 = \"#8c8c8c\";\r\nexport const fjscPrimary600 = \"#6c6c6c\";\r\nexport const fjscPrimary700 = \"#2b2b2b\";\r\nexport const fjscPrimary800 = \"#1b1b1b\";\r\nexport const fjscPrimary900 = \"#0c0c0c\";\r\nexport const fjscPrimary1000 = \"#000000\";\r\nexport const fjscSecondary100 = \"#1ca6ff\";\r\nexport const fjscSecondary200 = \"#1995e6\";\r\nexport const fjscSecondary300 = \"#1685cc\";\r\nexport const fjscSecondary400 = \"#1474b3\";\r\nexport const fjscSecondary500 = \"#116499\";\r\nexport const fjscSecondary600 = \"#0e5380\";\r\nexport const fjscSecondary700 = \"#0b4266\";\r\nexport const fjscSecondary800 = \"#08324c\";\r\nexport const fjscSecondary900 = \"#062133\";\r\nexport const fjscSecondary1000 = \"#161819\";\r\nexport const fjscRed100 = \"#ff6666\";\r\nexport const fjscRed200 = \"#ff4d4d\";\r\nexport const fjscRed300 = \"#ff3333\";\r\nexport const fjscRed400 = \"#ff1a1a\";\r\nexport const fjscRed500 = \"#ff0000\";\r\nexport const fjscRed600 = \"#cc0000\";\r\nexport const fjscRed700 = \"#990000\";\r\nexport const fjscRed800 = \"#660000\";\r\nexport const fjscRed900 = \"#330000\";\r\n\r\nexport const fjscVars = {\r\n    errorColor: fjscRed300,\r\n    areaBackground: fjscPrimary900,\r\n    areaBorder: fjscPrimary800,\r\n    containerBackground: fjscPrimary800,\r\n    containerBorder: fjscPrimary700,\r\n    textColor: fjscPrimary100,\r\n    interactiveBackground: fjscPrimary900,\r\n    interactiveBackgroundHover: fjscPrimary700,\r\n    interactiveBackgroundActive: fjscPrimary300,\r\n    interactiveColor: fjscPrimary200,\r\n    interactiveColorActive: fjscPrimary900,\r\n    interactiveBorder: fjscPrimary700,\r\n    interactiveBorderFocused: fjscSecondary100,\r\n    interactiveBorderActive: fjscSecondary300,\r\n\r\n    inputPaddingX: \"0.75em\",\r\n    inputPaddingY: \"0.3em\",\r\n    containerPaddingX: \"8px\",\r\n    containerPaddingY: \"8px\",\r\n    areaPaddingX: \"16px\",\r\n    areaPaddingY: \"16px\",\r\n    borderRadiusSmall: \"4px\",\r\n    borderRadiusMedium: \"6px\",\r\n    borderRadiusLarge: \"12px\",\r\n    font: \"sans-serif\",\r\n    baseFontSize: \"16px\",\r\n    gap: \"5px\",\r\n}",
    "import {mergeCss} from \"./f2.ts\";\r\nimport type {CssClass} from \"./f2.ts\";\r\nimport {fjscVars} from \"./fjscVariables.ts\";\r\n\r\nexport const baseCss: CssClass = {\r\n    fontFamily: `${fjscVars.font}, sans-serif`,\r\n    fontSize: fjscVars.baseFontSize,\r\n    border: \"none\",\r\n    background: \"none\",\r\n    color: fjscVars.textColor\r\n}\r\n\r\nexport const gapCss: CssClass = mergeCss(baseCss, {\r\n    gap: fjscVars.gap\r\n});\r\n\r\nexport const flexCss: CssClass = mergeCss(baseCss, {\r\n    display: \"flex\"\r\n});\r\n\r\nexport const relativeCss: CssClass = mergeCss(baseCss, {\r\n    position: \"relative\"\r\n});\r\n\r\nexport const flexVerticalCss: CssClass = mergeCss(baseCss, flexCss, gapCss, {\r\n    flexDirection: \"column\"\r\n});\r\n\r\nexport const interactiveCss: CssClass = mergeCss(baseCss, {\r\n    padding: `${fjscVars.inputPaddingY} ${fjscVars.inputPaddingX}`,\r\n    borderRadius: fjscVars.borderRadiusSmall,\r\n    border: `1px solid ${fjscVars.interactiveBorder}`,\r\n    background: fjscVars.interactiveBackground,\r\n    color: fjscVars.interactiveColor,\r\n});\r\n\r\nexport const containerCss: CssClass = mergeCss(baseCss, {\r\n    background: fjscVars.containerBackground,\r\n    padding: `${fjscVars.containerPaddingY} ${fjscVars.containerPaddingX}`,\r\n    borderRadius: fjscVars.borderRadiusMedium,\r\n    border: `1px solid ${fjscVars.containerBorder}`,\r\n});"
  ],
  "mappings": "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",
  "debugId": "73007ECD9100414364756E2164756E21",
  "names": []
}